.headerButtons {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  margin-top: 1.2rem;
  gap: 1rem;
}

.listActionButtons {
  display: flex;
  gap: 1rem;
}

.title {
  width: 100%;
  overflow: hidden;
  text-align: center;
}

.title h1 {
  margin: 0;
  text-wrap: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Filters section styles */
.filtersContainer {
  width: 100%;
}

.filtersContainer ul {
  display: flex;
  align-items: center;
  justify-content: space-around;
  width: 100%;
  padding: 0.5rem 0;
  margin: 0;
  border-bottom: 1px solid var(--color-border);
}

.filtersContainer li {
  display: flex;
  flex-direction: column;
  align-items: center;
  list-style: none;
  font-size: 1rem;
  color: var(--color-text-secondary);
  transition: font-weight 0.5s;
  gap: 0.1rem;
  padding: 0 0.2rem;
  cursor: pointer;
}

.filtersContainer li::after {
  content: "";
  width: 0;
  height: 0.2rem;
  border-radius: 0.2rem;
  background-color: var(--color-accent);
  transition: width 0.5s;
}

.filtersContainer li.active {
  color: var(--color-text-primary);
  font-weight: bold;
}

.filtersContainer li.active::after {
  width: 100%;
}

/* Items table section styles */
.iconsContainer {
  display: flex;
  width: fit-content;
  margin-left: auto;
  gap: 1rem;
}

.iconsContainer a {
  display: flex;
  align-items: center;
}

.iconsContainer svg {
  cursor: pointer;
  fill: var(--color-text-secondary);
}

.tableContainer {
  width: 100%;
  padding: 0 0.5rem 1rem 0.5rem;
}

.tableContainer table {
  width: 100%;
  border-spacing: 0 1.2rem;
  word-break: break-word;
}

.itemImgContainer {
  width: 4rem;
}

.itemImgContainer img {
  width: 100%;
  max-width: 4rem;
  height: auto;
  margin: auto;
  border-radius: 0.5rem;
  object-fit: contain;
  aspect-ratio: 4/3;
}

.itemStatus {
  display: flex;
  align-items: center;
  font-size: 0.93rem;
  color: var(--color-text-secondary);
  margin: 0;
  gap: 0.5rem;
}

.itemStatus::before {
  content: "";
  width: 0.5rem;
  height: 0.5rem;
  background-color: var(--color-text-secondary);
  border-radius: 100%;
}

.itemStatus.completed::before {
  background-color: var(--color-status-success);
}

.itemStatus.in_process::before {
  background-color: var(--color-status-warning);
}

.itemStatus.pending::before {
  background-color: var(--color-status-error);
}

.itemTitleContainer div {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 100%;
  padding: 0 0.5rem;
  gap: 0.2rem;
}

/* Floating Buttons */

.floatingButtonsContainer {
  position: fixed;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  bottom: calc(var(--layout-navbar-height) + 1.5rem);
  right: 1.25rem;
  --position-addButton: -120%;
  --position-editButton: -240%;
  --position-favoriteButton: -360%;
  --position-deleteButton: -480%;
  --transition-addButton: 0.15s;
  --transition-editButton: 0.25s;
  --transition-favoriteButton: 0.35s;
  --transition-deleteButton: 0.45s;
}

.buttonsContainer {
  position: absolute;
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
}

.buttonsWrapper {
  position: relative;
}

.favoriteButton svg {
  fill: none;
  stroke: var(--color-text-primary);
  stroke-width: 0.1rem;
}

.floatingButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 3.5rem;
  height: 3.5rem;
  border-radius: 50%;
  background-color: var(--color-bg-secondary);
  cursor: pointer;
  transition: var(--transition-short);
}

.floatingButton:active {
  filter: brightness(0.7);
}

.floatingButton a {
  display: flex;
  align-items: center;
  margin: 0;
  font-size: 1.5rem;
  text-decoration: none;
}

.expandButtons {
  position: relative;
  width: var(--size-floatingButton);
  height: var(--size-floatingButton);
  z-index: 5;
  background-color: var(--color-accent);
}

.expandButtons span {
  display: flex;
}

.expandButtons span.right {
  animation: spinRight 0.5s;
}

.expandButtons span.left {
  animation: spinLeft 0.5s;
}

.isFavorite svg {
  fill: var(--color-text-primary);
  animation: popHeart 0.5s;
}

/*  Floating buttons positions and show*/
.addButton,
.editButton,
.favoriteButton,
.deleteButton {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.addButton {
  transition: var(--transition-addButton) ease-out;
  transition-delay: calc(var(--transition-deleteButton) - var(--transition-addButton));
  z-index: 4;
}

.buttonsContainer.show .addButton {
  transition-delay: 0s;
  transform: translateX(-50%) translateY(var(--position-addButton));
}

.editButton {
  transition: var(--transition-editButton) ease-out;
  transition-delay: calc(var(--transition-deleteButton) - var(--transition-editButton));
  z-index: 3;
}

.buttonsContainer.show .editButton {
  transition-delay: 0s;
  transform: translateX(-50%) translateY(var(--position-editButton));
}

.favoriteButton {
  transition: var(--transition-favoriteButton) ease-out;
  transition-delay: calc(var(--transition-deleteButton) - var(--transition-favoriteButton));
  z-index: 2;
}

.buttonsContainer.show .favoriteButton {
  transition-delay: 0s;
  transform: translateX(-50%) translateY(var(--position-favoriteButton));
}

.deleteButton {
  transition: var(--transition-deleteButton) ease-out;
  z-index: 1;
}

.buttonsContainer.show .deleteButton {
  transition-delay: 0s;
  transform: translateX(-50%) translateY(var(--position-deleteButton));
}

/* Keyframes */

@keyframes popHeart {
  0% {
    transform: scale(0);
  }
  90% {
    transform: scale(1.3);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes spinRight {
  0% {
    transform: rotateZ(0);
  }
  100% {
    transform: rotateZ(180deg);
  }
}

@keyframes spinLeft {
  0% {
    transform: rotateZ(0);
  }
  100% {
    transform: rotateZ(-180deg);
  }
}
